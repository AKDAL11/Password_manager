//go:build android

package gui

import (
    "errors"
    "fmt"

    "fyne.io/fyne/v2"
    "fyne.io/fyne/v2/container"
    "fyne.io/fyne/v2/dialog"
    "fyne.io/fyne/v2/theme"
    "fyne.io/fyne/v2/widget"

    "password-manager/internal/i18n"
    pmapp "password-manager/internal/app"
    "password-manager/pkg/appandroid"
)

func LaunchWithUnlock(a fyne.App) {
    factory := CurrentFactory()
    a.Settings().SetTheme(factory.Theme())

    appInstance := appandroid.InitApp(a) // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç *pmapp.App
    if appInstance == nil {
        w := a.NewWindow("‚ùå " + i18n.T("Error"))
        label := widget.NewLabel("‚ùå " + i18n.T("DB_init_failed"))
        label.Alignment = fyne.TextAlignCenter
        label.TextStyle = fyne.TextStyle{Bold: true}

        // –∫–æ–º–ø–∞–∫—Ç–Ω–æ–µ –æ–∫–Ω–æ –æ—à–∏–±–∫–∏ —Å –ø–∞–¥–¥–∏–Ω–≥–æ–º
        card := container.NewVBox(
            widget.NewLabelWithStyle("‚ùó "+i18n.T("Initialization_error"), fyne.TextAlignCenter, fyne.TextStyle{Bold: true}),
            widget.NewSeparator(),
            container.NewCenter(label),
        )

        fyne.Do(func() {
            w.SetContent(container.NewPadded(card))
            w.Resize(factory.SmallWindowSize())
            w.Show()
        })
        return
    }

    _ = i18n.LoadLocale(i18n.CurrentLang())

    if !appInstance.HasMasterPassword() {
        showRegistrationWindow(a, appInstance)
        return
    }

    showUnlockWindow(a, appInstance)
}

// --- –û–∫–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ---
func showRegistrationWindow(a fyne.App, appInstance *pmapp.App) {
    factory := CurrentFactory()
    w := a.NewWindow("üîê " + i18n.T("Create_Master_Password"))
    w.Resize(factory.SmallWindowSize())
    w.CenterOnScreen()

    // –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title := widget.NewLabel("üîê " + i18n.T("First-time_setup"))
    title.Alignment = fyne.TextAlignCenter
    title.TextStyle = fyne.TextStyle{Bold: true}

    // –ü–æ–ª—è
    emailEntry := widget.NewEntry()
    emailEntry.SetPlaceHolder(i18n.T("Enter_your_email"))

    pass1 := widget.NewPasswordEntry()
    pass1.SetPlaceHolder(i18n.T("Create_Master_Password"))

    pass2 := widget.NewPasswordEntry()
    pass2.SetPlaceHolder(i18n.T("Confirm_master_password"))

    // –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    saveBtn := widget.NewButtonWithIcon(i18n.T("Save"), theme.ConfirmIcon(), func() {
        if pass1.Text == "" || emailEntry.Text == "" {
            dialog.ShowError(errors.New(i18n.T("email_and_password_required")), w)
            return
        }
        if pass1.Text != pass2.Text {
            dialog.ShowError(errors.New(i18n.T("passwords_do_not_match")), w)
            return
        }
        if err := appInstance.SetMasterPassword(emailEntry.Text, pass1.Text); err != nil {
            dialog.ShowError(err, w)
            return
        }
        dialog.ShowInformation(i18n.T("Success"), i18n.T("Master_password_saved"), w)
        w.Hide()
        showUnlockWindow(a, appInstance)
    })
    saveBtn.Importance = widget.HighImportance

    // –í—ã–±–æ—Ä —è–∑—ã–∫–∞
    langSelect := widget.NewSelect([]string{"en", "ru", "be"}, func(lang string) {
        if err := i18n.LoadLocale(lang); err != nil {
            fmt.Println("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —è–∑—ã–∫–∞:", err)
            return
        }
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        w.SetTitle("üîê " + i18n.T("Create_Master_Password"))
        title.SetText("üîê " + i18n.T("First-time_setup"))
        emailEntry.SetPlaceHolder(i18n.T("Enter_your_email"))
        pass1.SetPlaceHolder(i18n.T("Create_Master_Password"))
        pass2.SetPlaceHolder(i18n.T("Confirm_master_password"))
        saveBtn.SetText(i18n.T("Save"))
    })
    langSelect.SetSelected(i18n.CurrentLang())

    // –†–∞–∑–º–µ—Ç–∫–∞: –∞–∫–∫—É—Ä–∞—Ç–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
    form := container.NewVBox(
        widget.NewLabelWithStyle("üìß "+i18n.T("Email"), fyne.TextAlignLeading, fyne.TextStyle{Bold: true}),
        emailEntry,
        widget.NewLabelWithStyle("üîë "+i18n.T("Master_Password"), fyne.TextAlignLeading, fyne.TextStyle{Bold: true}),
        pass1,
        widget.NewLabelWithStyle("üîë "+i18n.T("Confirm_master_password"), fyne.TextAlignLeading, fyne.TextStyle{Bold: true}),
        pass2,
    )

    actions := container.NewHBox(
        saveBtn,
        langSelect,
    )

    card := container.NewVBox(
        title,
        widget.NewSeparator(),
        form,
        widget.NewSeparator(),
        actions,
    )

    // –ü–∞–¥–¥–∏–Ω–≥ –∏ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è ¬´–∫—Ä–∞—Å–æ—Ç—ã¬ª
    fyne.Do(func() {
        w.SetContent(container.NewCenter(container.NewPadded(card)))
        w.Show()
    })
}

// --- –û–∫–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ ---
func showUnlockWindow(a fyne.App, appInstance *pmapp.App) {
    factory := CurrentFactory()
    w := a.NewWindow("üîê " + i18n.T("Unlock_Password_Manager"))
    w.Resize(factory.SmallWindowSize())
    w.CenterOnScreen()

    // –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title := widget.NewLabel("üîê " + i18n.T("Unlock_Password_Manager"))
    title.Alignment = fyne.TextAlignCenter
    title.TextStyle = fyne.TextStyle{Bold: true}

    // –ü–æ–ª–µ –≤–≤–æ–¥–∞
    passwordEntry := widget.NewPasswordEntry()
    passwordEntry.SetPlaceHolder(i18n.T("Enter_master_password"))

    // –ö–Ω–æ–ø–∫–∏
    unlockBtn := widget.NewButtonWithIcon(i18n.T("Unlock"), theme.LoginIcon(), func() {
        if ok := appInstance.VerifyMasterPassword(passwordEntry.Text); !ok {
            fyne.Do(func() {
                dialog.ShowError(errors.New(i18n.T("invalid_master_password")), w)
            })
            return
        }
        fyne.Do(func() {
            w.Hide()
            ShowMainWindow(a, appInstance)
        })
    })
    unlockBtn.Importance = widget.HighImportance

    // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —è–∑—ã–∫–∞
    langSelect := widget.NewSelect([]string{"en", "ru", "be"}, func(lang string) {
        if err := i18n.LoadLocale(lang); err != nil {
            fmt.Println("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —è–∑—ã–∫–∞:", err)
            return
        }
        fyne.Do(func() {
            w.SetTitle("üîê " + i18n.T("Unlock_Password_Manager"))
            title.SetText("üîê " + i18n.T("Unlock_Password_Manager"))
            passwordEntry.SetPlaceHolder(i18n.T("Enter_master_password"))
            unlockBtn.SetText(i18n.T("Unlock"))
        })
    })
    langSelect.SetSelected(i18n.CurrentLang())

    // ¬´–ö–∞—Ä—Ç–æ—á–∫–∞¬ª —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏ –∏ –ø–∞–¥–¥–∏–Ω–≥–æ–º
    card := container.NewVBox(
        title,
        widget.NewSeparator(),
        widget.NewLabelWithStyle("üîë "+i18n.T("Master_Password"), fyne.TextAlignLeading, fyne.TextStyle{Bold: true}),
        passwordEntry,
        widget.NewSeparator(),
        container.NewHBox(unlockBtn, langSelect),
    )

    fyne.Do(func() {
        w.SetContent(container.NewCenter(container.NewPadded(card)))
        w.Show()
    })
}
